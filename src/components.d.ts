/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Options } from "./components/canvas-component/canvas-component";
export { Options } from "./components/canvas-component/canvas-component";
export namespace Components {
  interface CanvasComponent {
    /**
     * The config property for canvas generation config
     */
    config: Options;
    /**
     * The copy property for activate copy to clipboad
     */
    copy: boolean;
    /**
     * Public API to get content during runtime
     */
    get: (
      type?: "canvas" | "image",
    ) => Promise<string | HTMLImageElement | HTMLCanvasElement>;
    /**
     * The type property for image type
     */
    type: "canvas" | "image";
  }
}
declare global {
  interface HTMLCanvasComponentElement
    extends Components.CanvasComponent,
      HTMLStencilElement {}
  var HTMLCanvasComponentElement: {
    prototype: HTMLCanvasComponentElement;
    new (): HTMLCanvasComponentElement;
  };
  interface HTMLElementTagNameMap {
    "canvas-component": HTMLCanvasComponentElement;
  }
}
declare namespace LocalJSX {
  interface CanvasComponent {
    /**
     * The config property for canvas generation config
     */
    config?: Options;
    /**
     * The copy property for activate copy to clipboad
     */
    copy?: boolean;
    /**
     * The type property for image type
     */
    type?: "canvas" | "image";
  }
  interface IntrinsicElements {
    "canvas-component": CanvasComponent;
  }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      "canvas-component": LocalJSX.CanvasComponent &
        JSXBase.HTMLAttributes<HTMLCanvasComponentElement>;
    }
  }
}
